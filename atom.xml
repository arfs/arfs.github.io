<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Allan Siongco</title>
  
  <subtitle>Technology Professionial with EQ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://arfs.github.io/"/>
  <updated>2018-11-05T21:33:03.000Z</updated>
  <id>http://arfs.github.io/</id>
  
  <author>
    <name>Allan Siongco</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Thoughts on Challenge #1</title>
    <link href="http://arfs.github.io/2018/11/05/thoughts-on-challenge-1/"/>
    <id>http://arfs.github.io/2018/11/05/thoughts-on-challenge-1/</id>
    <published>2018-11-05T16:17:01.000Z</published>
    <updated>2018-11-05T21:33:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>If you look in the dictionary, one of the definitions for <code>program</code> is </p><blockquote><p>a plan or schedule of activities, procedures, etc., to be followed.</p></blockquote><p>Believe it or not, you just did some programming for challenge #1!</p><p>The concept of coding seems simple: you are just writing directions in a very specific way so it will be followed according to what you had in mind.</p><p>But as many of you commented on the challenge, what seemed simple at first was actually a lot harder in practice.</p><p>That’s because if you didn’t use just the right words or you weren’t specific, detailed, or organized enough it’s possible that your instructions will be misinterpreted &mdash;something that happened with even my own instructions for this challenge.</p><p>Coding is hard. You have to do exactly what you did in the challenge and take it a step even further. </p><p>For example, here’s an example from your peers which I was thought reasonably detailed:</p><ol><li>Grab 2 slices of bread</li><li>Place one slice of bread flat</li><li>Get a slice of turkey and “layer” it flat on the slice of bread</li><li>Repeat until 5 total slices of turkey are layered on the piece of bread</li><li>Place a piece of pepper jack cheese of the top</li><li>Spread mayonnaise evenly using a knife in a back and forth motion on the flat side of the other slice of bread</li><li>Place the slice of bread with the mayonnaise facing downward (toward the cheese) on the stack of cheese, turkey, and bread</li><li>Enjoy sandwich.</li></ol><p>Looks pretty good right? Unfortunately a computer might respond like this:</p><blockquote><p>what is grab? what is bread?</p></blockquote><p>So how detailed do you have to be? Maybe something like this:</p><ol><li>Describe what bread is (that white fluffy looking thing over there with light brown edges)</li><li>Describe what a plate is (that round, white flat thing with edges that curve up) </li><li>Take your hand and open it so the fingers are apart</li><li>Move hand towards the bread and touch it with your fingers</li><li>When fingers are touching the bread, close hand by moving fingers together and make sure that some of the bread remains between the fingers</li><li>If you lift your hands up, the bread should move with your hands </li><li>Now move your hands towards the plate until it’s directly on top of it by about 2-3 inches</li><li>Do something similar from #2 so the bread drops on to the plate</li></ol><p>Yes, computer programming is something like this.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;If you look in the dictionary, one of the definitions for &lt;code&gt;program&lt;/code&gt; is &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a plan or schedule of activities, 
      
    
    </summary>
    
      <category term="atomic coding" scheme="http://arfs.github.io/categories/atomic-coding/"/>
    
    
  </entry>
  
  <entry>
    <title>Get More Out of Your 1-1s as a Manager</title>
    <link href="http://arfs.github.io/2018/03/21/get-more-out-of-your-1-1s-as-a-manager/"/>
    <id>http://arfs.github.io/2018/03/21/get-more-out-of-your-1-1s-as-a-manager/</id>
    <published>2018-03-22T02:14:40.000Z</published>
    <updated>2018-03-23T02:54:13.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/1-1s.jpg"><p>When I first became a manager and started doing 1–1s, it didn’t feel like a good use of time.</p><p>I was doing them how some of my previous managers were doing them, which was about once a month or so. Since my bosses at the time and I rarely talked, the conversations were somewhat awkward and we’d quickly move on to status updates and perfomance feedback.</p><p>Even for the ones that were more structured and had a prepared agenda, it was strictly informational and they could have easily gotten what they were looking for via email. Sometimes  the meetings felt like a to-do item — just something to check off as part of the duties for the month.</p><p>They weren’t using 1–1s as effectively as they could and I was unfortunately on the path to making the same mistake. But then I realized: hmm… maybe it could be done better. </p><p>Since you’re still reading, I’m assuming you can relate to some or all of this. So let me ask you, have you ever wondered: how can I use my 1–1s more effectively so that I could build engaged, high-performing teams? </p><p>I wondered it myself at one point so I figured I would save you the trouble and share you my thoughts.</p><h1 id="Don’t-Make-It-Just-a-Status-Update"><a href="#Don’t-Make-It-Just-a-Status-Update" class="headerlink" title="Don’t Make It Just a Status Update"></a>Don’t Make It Just a Status Update</h1><p>Although 1–1s are a good time to get an update on how projects are coming along, one of the things I realized is that it shouldn’t be its only purpose. </p><p>1–1s are a perfect opportunity to make sure that you’re aligned with your team. The mindset coming into one should be about building trust and strong relationships with each individual and making sure there are no obstacles to their success personally or professionally.</p><p>When you have this goal in mind, the conversations should starting feeling less awkward, cold, and impersonal. It should become the start of something… magical. Just kidding. But seriously, it would be much better than before.</p><h1 id="Have-It-More-Frequently"><a href="#Have-It-More-Frequently" class="headerlink" title="Have It More Frequently"></a>Have It More Frequently</h1><p>So let’s forget about work for a second and think about something.</p><p>Do you generally have stronger relationships with people you talk to once a month? Or once a week? I’m hoping you answered once  a week. </p><p>Although it is possible to establish strong relationships with people you talk to infrequently, it is definitely much easier (and quicker) when you talk to them more frequently.</p><p>Yet, there are many managers who choose to have their 1–1s once a month or even worse, quarterly. Since they haven’t been able to establish a relationship with their team members, that blocked-off time becomes an awkward conversation of old status updates and trying to recollect issues that have long passed.</p><p>I like to have 1–1s as suggested in <a href="https://www.amazon.com/Effective-Manager-Mark-Horstman/dp/1119244609/" target="_blank" rel="noopener">The Effective Manager</a> (great book btw) which is to schedule shorter, but more frequent sessions. For me, this was 20 minutes with each team member once a week which I thought was a great cadence for getting to know people well and have very good awareness of what’s going on.</p><p>If you’re in the same office together 40 hours a week, managers should aim to stop simulating the conditions of a long-distance relationship.</p><h1 id="Feedback-Can-Be-Positive-Ya-Know"><a href="#Feedback-Can-Be-Positive-Ya-Know" class="headerlink" title="Feedback Can Be Positive, Ya Know"></a>Feedback Can Be Positive, Ya Know</h1><p>Giving feedback to team members is an important part of making sure everything is on track and making sure they are aware of expectations. </p><p>However, if the feedback given is always negative feedback they will be conditioned to think that it’s the only thing you ever notice — something that’s not good for trust, respect, and/or morale.</p><p>Another thing I like that is suggested in <a href="https://www.amazon.com/Effective-Manager-Mark-Horstman/dp/1119244609/" target="_blank" rel="noopener">The Effective Manager</a> is to occasionally mix in giving ONLY positive feedback in a 1–1 session, especially when you’re first starting off and establishing a relationship. Whether you are giving positive or negative feedback I also like to ask for permission first.</p><ul><li>Do you mind if I share some feedback with you?</li></ul><p>By asking, it prepares the other person to accept feedback more openly or opt-out if they are having a rough day. People like having choices.</p><h1 id="Don’t-Make-It-Just-About-Work"><a href="#Don’t-Make-It-Just-About-Work" class="headerlink" title="Don’t Make It Just About Work"></a>Don’t Make It Just About Work</h1><p>While we’re talking about establishing relationships, let’s ponder another question. When you meet up with your friends, do you only talk about work? </p><p>I hope not. I would hope that you engage in conversation about other topics such as what’s new with them, what their goals are, etc. </p><p>Likewise, during 1–1s with your team members don’t view them just as employees but rather as real human beings— you know, just like your human friends. Ask about what’s going on with their lives, how they are feeling, and what their problems are. Show genuine interest in them as a person.</p><p>Not only does this establish a relationship, but knowing about their personal life can also help you address anything that might be affecting their professional life. I personally like to start off the 1–1 with this type of conversation first before moving on to work-related items like status updates and feedback.</p><h1 id="Improve-Them-Improve-Yourself"><a href="#Improve-Them-Improve-Yourself" class="headerlink" title="Improve Them, Improve Yourself"></a>Improve Them, Improve Yourself</h1><p>In my opinion, the fastest way to grow and advance is by learning from other people. </p><p>If you want your team to be as productive as possible, you should manage for performance <em>and</em> also mentor for development. During your 1–1s, you should pick their brains, coach them to emphasize their strengths,  and help them work around their weaknesses.</p><p>Learning doesn’t have to be a one-way street, however. You might be their boss but it doesn’t mean you have nothing to learn from them. The opposite is true and even more so if your team is a blend of people with different characteristics. Additionally, you <em>should</em> be trying to surround yourself with people that are smarter than you.</p><p>Since you’re already meeting up for 1–1s, why not take advantage of the situation and learn something by engaging in deep, collaborative conversations?</p><p>For example you could</p><ol><li>Ask them how they would approach a problem you have thought about and compare the solutions and thought processes.</li><li>Pick a quality they have that you like or a skill you know they’re good at, then ask them for advice on how to acquire it.</li><li>Get feedback from them, and in particular, solicit negative feedback. Throw away your pride and ask if there’s anything you can do better as a manager and as a person.</li></ol><p>Not only are you using your 1–1 time to learn and improve yourself, but you are also establishing trust and relationships at the same time. </p><p>Learning from other people gives you valuable information about how their mind works, what motivates them, and a bunch of other things that can be leveraged so that you can become not just a good manager, but a good leader as well.</p><h1 id="Engaged-High-Performing-Teams"><a href="#Engaged-High-Performing-Teams" class="headerlink" title="Engaged, High-Performing Teams"></a>Engaged, High-Performing Teams</h1><p>When I realized that I could get more out of my 1–1s by shifting my purpose to building trust and strong relationships, the difference was night and day. </p><p>I started having real conversations — stimulating back and forth dialogue — that was meaningful and productive. Both parties frequently walked away feeling like they learned something new, personally and professionally. Since we learned about each other, we also learned how to work better together and the team’s productivity increased overall.</p><p>By using the time scheduled for 1–1s more effectively, you can transition from something that feels like a to-do item to check off for the month to something that builds engaged, high-performing teams.</p><hr><p><em>Do you have any tips for getting more out of your 1-1s? Please let me know in the comments section below!</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/images/1-1s.jpg&quot;&gt;
&lt;p&gt;When I first became a manager and started doing 1–1s, it didn’t feel like a good use of time.&lt;/p&gt;
&lt;p&gt;I was d
      
    
    </summary>
    
      <category term="personal development" scheme="http://arfs.github.io/categories/personal-development/"/>
    
    
      <category term="career" scheme="http://arfs.github.io/tags/career/"/>
    
      <category term="EQ" scheme="http://arfs.github.io/tags/eq/"/>
    
      <category term="management" scheme="http://arfs.github.io/tags/management/"/>
    
      <category term="leadership" scheme="http://arfs.github.io/tags/leadership/"/>
    
  </entry>
  
  <entry>
    <title>EQ for Better IT</title>
    <link href="http://arfs.github.io/2018/03/17/eq-for-better-it/"/>
    <id>http://arfs.github.io/2018/03/17/eq-for-better-it/</id>
    <published>2018-03-18T00:12:42.000Z</published>
    <updated>2018-03-23T02:49:28.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/eq.jpg"><p>Although there seems to be plenty of IQ in our field, having emotional intelligence, or EQ, is a skill that’s lost by many Information Technology professionals.</p><p>EQ is the level of your ability to understand other people, what motivates them, and how to work cooperatively with them.</p><p>Technology transforms businesses, but <a href="/2017/07/02/why-do-businesses-even-exist/" title="business is inherently a human activity">business is inherently a human activity</a>; value is created by understanding and solving people’s problems.</p><p>If you wanted to leverage technology to create more value and lead your company to higher profitability, wouldn’t you want someone who works as well with people as they do with computers?</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/images/eq.jpg&quot;&gt;
&lt;p&gt;Although there seems to be plenty of IQ in our field, having emotional intelligence, or EQ, is a skill that’s 
      
    
    </summary>
    
      <category term="technology" scheme="http://arfs.github.io/categories/technology/"/>
    
    
      <category term="technology" scheme="http://arfs.github.io/tags/technology/"/>
    
      <category term="EQ" scheme="http://arfs.github.io/tags/eq/"/>
    
      <category term="business" scheme="http://arfs.github.io/tags/business/"/>
    
  </entry>
  
  <entry>
    <title>First Blog Published on Improving.com!</title>
    <link href="http://arfs.github.io/2018/03/06/First-blog-published-on-Improving-com/"/>
    <id>http://arfs.github.io/2018/03/06/First-blog-published-on-Improving-com/</id>
    <published>2018-03-07T05:44:42.000Z</published>
    <updated>2018-04-13T22:23:19.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/first-time-consultant.jpg" width="704"><p>A couple of months ago when I started at <a href="http://improving.com/" target="_blank" rel="noopener">Improving</a> in January, I was inspired to write a Medium blog story after hearing some first-time experiences from other consultants. </p><p>I casually posted it in our company #slack channel and it was very well-received. A handful of people expressed to me about how they or someone they knew could relate to it. People loved the writing style and concrete advice and forwarded it to friends they felt should read it.</p><p>Little did I know that it would also be noticed by the marketing team. </p><p>After they emailed me to ask for my permission, it was scheduled for the March newsletter. Fast-forward to now and I am pleased to announce that you can read my first contribution for Improving’s blog:</p><p><a href="http://improving.com/thoughts/mistakes-to-avoid-as-a-first-time-tech-consultant" target="_blank" rel="noopener">Mistakes To Avoid as a First-Time Tech Consultant</a></p><p><em>UPDATE</em> - It has been temporarily taken down. Someone pointed out that the article’s headlines may scare away potential new consultants. I am working on a modified edition so it can be republished on Improving’s site.</p><p>For now you can read the original article <a href="https://medium.com/@arfs/mistakes-to-avoid-as-a-first-time-tech-consultant-624501a21ea8" target="_blank" rel="noopener">here</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/images/first-time-consultant.jpg&quot; width=&quot;704&quot;&gt;
&lt;p&gt;A couple of months ago when I started at &lt;a href=&quot;http://improving.com/&quot; target
      
    
    </summary>
    
      <category term="personal development" scheme="http://arfs.github.io/categories/personal-development/"/>
    
    
      <category term="career" scheme="http://arfs.github.io/tags/career/"/>
    
      <category term="technology" scheme="http://arfs.github.io/tags/technology/"/>
    
  </entry>
  
  <entry>
    <title>I Hate Whiteboarding in Tech Interviews</title>
    <link href="http://arfs.github.io/2017/12/01/i-hate-whiteboarding-in-tech-interviews/"/>
    <id>http://arfs.github.io/2017/12/01/i-hate-whiteboarding-in-tech-interviews/</id>
    <published>2017-12-02T04:46:14.000Z</published>
    <updated>2018-03-23T02:54:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>I was inspired to write this Medium blog story after doing badly during the whiteboarding portion of an interview.</p><p>I didn’t do <em>that</em> bad actually. I still got the job but I didn’t do as well I expected out of myself.</p><p>It was a good thing that it happened, however, because it made me realize that I had gotten complacent in my software engineering skills as I grew into management and leadership positions at my previous job.</p><p>If you have ever thought that whiteboarding in interviews are stupid, give <a href="https://medium.com/@arfs/i-hate-whiteboarding-in-tech-interviews-6d732d217cf9" target="_blank" rel="noopener">I Hate Whiteboarding In Tech Interviews</a> a read and let me know if it changes your mind.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I was inspired to write this Medium blog story after doing badly during the whiteboarding portion of an interview.&lt;/p&gt;
&lt;p&gt;I didn’t do &lt;em
      
    
    </summary>
    
      <category term="technology" scheme="http://arfs.github.io/categories/technology/"/>
    
    
      <category term="programmming" scheme="http://arfs.github.io/tags/programmming/"/>
    
  </entry>
  
  <entry>
    <title>Learning Complex Skills</title>
    <link href="http://arfs.github.io/2017/07/20/learning-complex-skills/"/>
    <id>http://arfs.github.io/2017/07/20/learning-complex-skills/</id>
    <published>2017-07-21T02:37:05.000Z</published>
    <updated>2018-03-23T02:51:18.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/complex-skills.jpg"><p>Most people have trouble acquiring new complex skills (such as playing tennis, coding, networking, presenting, etc.) because </p><ol><li>they don’t understand that complex skills are really a collection of simple skills performed in a certain manner and…</li><li>it must be practiced repeatedly to make it look easy and natural (internalization)</li></ol><p>A common mistake people make is to try to learn a complex skill as if it’s just one single skill. Through a lot trial and error, it is possible to reach a certain level of competence this way, but I would argue that this common approach introduces a few critical problems.</p><h1 id="Problems-with-the-common-approach"><a href="#Problems-with-the-common-approach" class="headerlink" title="Problems with the common approach"></a>Problems with the common approach</h1><p>The first is that the common approach can take much longer than necessary. For example, many people learn to play tennis simply by going out to the court with friends and try to keep a rally going. If you’ve ever watched casual players do this you would know that it’s not very successful.</p><p>Second is that even if you managed to reach some level of competence with the “trial by fire” approach, the focus would have been on trying to produce “quick” results rather than mastery of fundamentals. Although it is possible to look like you are producing results very quickly on the first part of the learning curve, you are most likely hindering long-term growth by unknowingly having gaps in fundamental knowledge.</p><h1 id="Progressions"><a href="#Progressions" class="headerlink" title="Progressions"></a>Progressions</h1><p>As I mentioned before, complex skills are really a collection of simple skills. A good coach (or a good self-learner) is able to deconstruct these complex skills into simple skills and plan a good sequence of progressions for learning. </p><p>For example, an adult can learn how to ride simply by going out there and immediately trying to pedal on the street and falling repeatedly until they finally get it.</p><p>Or they can take a less painful (and a more effective) approach and learn it through a series of progressions. It can look something like this:</p><ul><li>find a grassy area that has a very slight decline so that a bike can roll downhill</li><li>remove pedals so that it’s not in the way, and try to roll down hill very slowly by inching your feet off the ground just a tad. if you lose balance, just put your feet back down</li><li>as you start to “get” the feel of how the bike starts self-balancing when it’s rolling, try to keep your feet off the ground longer and longer and roll downhill without touching</li><li>as you get better at balancing, switch from a grassy decline to a concrete decline and practice feeling out the balance more</li><li>one you reach a certain level of confidence in your ability to feel the balance, put the pedals back on and attempt to roll down hill with the feet on your pedals (but not pedaling yet)</li><li>after you’re able to keep your balance indefinitely with the feet on the pedals, slowly start moving the pedals with your feet</li><li>etc…</li></ul><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>As you can see from above, the complex skill of learning how to ride a bike has been broken down into more manageable skill progressions.</p><p>Not only is it less overwhelming, but it is actually more effective in that allows a person to master fundamental layers individually so that in creates a strong foundation for long-term growth.</p><p>Most people don’t bother with trying to learn with this approach. The human mind is inherently lazy after all, and it takes some thought via problem solving and planning (or finding/paying for a mentor) to learn in this manner.</p><p>However if you can get over the obstacle of “learning how to learn”, it establishes a framework for learning other complex skills that can open many opportunities.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/images/complex-skills.jpg&quot;&gt;
&lt;p&gt;Most people have trouble acquiring new complex skills (such as playing tennis, coding, networking,
      
    
    </summary>
    
      <category term="personal development" scheme="http://arfs.github.io/categories/personal-development/"/>
    
    
      <category term="personal development" scheme="http://arfs.github.io/tags/personal-development/"/>
    
      <category term="metalearning" scheme="http://arfs.github.io/tags/metalearning/"/>
    
  </entry>
  
  <entry>
    <title>Why Do Businesses Even Exist?</title>
    <link href="http://arfs.github.io/2017/07/02/why-do-businesses-even-exist/"/>
    <id>http://arfs.github.io/2017/07/02/why-do-businesses-even-exist/</id>
    <published>2017-07-02T05:00:13.000Z</published>
    <updated>2018-03-23T02:54:47.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/businesses.jpg"><h1 id="Core-Drives"><a href="#Core-Drives" class="headerlink" title="Core Drives"></a>Core Drives</h1><p>For whatever reason, we exist; and during that existence we have core human drives. We are born with simple and essential ones, such as the need to survive. Out of that comes the need for air, water, and food. As our essential drives are fulfilled and our minds mature, we have the need to fulfill more sophisticated, higher-level drives. We then pursue things such as the need for relatedness, growth, and importance.</p><h1 id="Problems-and-Solutions"><a href="#Problems-and-Solutions" class="headerlink" title="Problems and Solutions"></a>Problems and Solutions</h1><p>As you can imagine, those core human drives pose problems for us in our day-to-day lives. For example if our core human drive to survive gives us the problem of hunger, we have to craft a solution in order to fulfill that drive. If we have the desire, time, and resources then our solution can be to obtain the knowledge on how to produce our own food.</p><p>However, time is a finite resource and taking the time to obtain the knowledge to fulfill every drive we have is not a practical solution for most people. In the old days, we obtained solutions from other people by bartering. Nowadays, solutions to our problems can be bought from other people.</p><h1 id="Value"><a href="#Value" class="headerlink" title="Value"></a>Value</h1><p>Our existence gives us core human drives and those drives produce problems that we have to seek solutions for. Since knowledge takes time to obtain and time is finite, we find value in obtaining solutions created by other people. In order to buy solutions, there has to be people creating value and offering them in exchange for currency.</p><h1 id="Businesses"><a href="#Businesses" class="headerlink" title="Businesses"></a>Businesses</h1><p>Businesses are a collection of people creating solutions we find valuable. They deliver it in the form of products and services in exchange for currency.</p><p>Therefore, businesses exist for two reasons:</p><ol><li>to solve problems caused by our core human drives</li><li>ironically enough, to solve the problem of the owner’s own drive to pursue the need for relatedness, growth, and importance.</li></ol><p>Successful businesses are a collection of people proficient in reverse engineering particular inner workings of the human mind.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/images/businesses.jpg&quot;&gt;
&lt;h1 id=&quot;Core-Drives&quot;&gt;&lt;a href=&quot;#Core-Drives&quot; class=&quot;headerlink&quot; title=&quot;Core Drives&quot;&gt;&lt;/a&gt;Core Drives&lt;/h1&gt;&lt;p
      
    
    </summary>
    
      <category term="business" scheme="http://arfs.github.io/categories/business/"/>
    
    
      <category term="business" scheme="http://arfs.github.io/tags/business/"/>
    
  </entry>
  
</feed>
